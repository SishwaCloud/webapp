const express = require('express');
const router = express.Router();
const authorization = require('../security/authorization.js');
const imageService = require('../service/imageService.js');
const multer = require('multer');

// Configure multer
const storage = multer.memoryStorage();
const upload = multer({
  storage,
  limits: {
    fileSize: 1024 * 1024 * 5, // 5 MB limit
  },
  fileFilter: (req, file, cb) => {
    if (file.mimetype.startsWith('image/')) {
      return cb(null, true);
    }
    return cb(new Error('Only image files are allowed!'));
  },
}).single('file');

router.post('/product/:pid/image', authorization, upload, uploadNewImage);
router.get('/product/:pid/image/:image_id', authorization, getImageById);
router.get('/product/:pid/image', authorization, getAllImages);
router.delete('/product/:pid/image/:image_id', authorization, deleteImage);


function uploadNewImage(req, res, next) {
    imageService.createImage(req, res)
        .then(data => { res.status(201); res.json(data) })
        .catch(data => { console.log(data); res.sendStatus(400); next() });
}

function getImageById(req, res, next) {
    imageService.getImageById(req, res)
        .then(data => { res.status(200); res.json(data) })
        .catch(data => { console.log(data); res.sendStatus(404); next() });
}


function getAllImages(req, res, next) {
    imageService.getAllImages(req, res)
        .then(data => { res.status(200); res.json(data) })
        .catch(data => { console.log(data); res.sendStatus(404); next() });
}

function deleteImage(req, res, next) {
    imageService.deleteImage(req, res)
        .then(data => { res.status(204); res.json(data) })
        .catch(data => { console.log(data); res.sendStatus(404); next() });
}

module.exports = router;